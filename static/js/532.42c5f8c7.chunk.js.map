{"version":3,"file":"static/js/532.42c5f8c7.chunk.js","mappings":"oOAIe,SAASA,IACtB,OAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,aACgBH,GACbI,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPN,EAAeM,MAEhBC,OAAM,SAAAC,GAAK,MAAI,aACjB,CAACP,KAGF,8BACGF,GAAeA,EAAYU,OAAS,GACnC,wBACGV,EAAYW,KAAI,SAAAC,GACf,IAAQC,EAAwBD,EAAxBC,GAAIC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QACpB,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,SAQf,wE,kBChCR,IAAMG,EAAW,+BACXC,EAAM,mCAuDZ,IAAMZ,EAAM,CACVa,oBAtDF,WACE,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,IAAOX,MAC5D,SAAAc,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,gCAiD7BC,gBA5CF,SAAyBb,GACvB,OAAOM,MAAM,GAAD,OAAIH,EAAJ,kBAAsBH,EAAtB,oBAAoCI,IAAOX,MAAK,SAAAc,GAC1D,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,gCAwC3BE,YApCF,SAAqBd,GACnB,OAAOM,MAAM,GAAD,OAAIH,EAAJ,kBAAsBH,EAAtB,4BAA4CI,IAAOX,MAC7D,SAAAc,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,gCA+B7BG,aA1BF,SAAsBf,GACpB,OAAOM,MAAM,GAAD,OAAIH,EAAJ,kBAAsBH,EAAtB,4BAA4CI,IAAOX,MAC7D,SAAAc,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,gCAqB7BI,YAhBF,SAAqBC,GACnB,OAAOX,MAAM,GAAD,OAAIH,EAAJ,+BAAmCc,EAAnC,oBAAoDb,IAAOX,MACrE,SAAAc,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,iCAa/B","sources":["Pages/Reviews.js","Service/api-service.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport api from 'Service/api-service';\nimport { useState, useEffect } from 'react';\n\nexport default function Cast() {\n  const [reviewsInfo, setReviewsInfo] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    api\n      .fetchReviews(movieId)\n      .then(({ results }) => {\n        setReviewsInfo(results);\n      })\n      .catch(error => 'error');\n  }, [movieId]);\n\n  return (\n    <>\n      {reviewsInfo && reviewsInfo.length > 0 ? (\n        <ul>\n          {reviewsInfo.map(review => {\n            const { id, author, content } = review;\n            return (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'b392cdf9c5e216c7de5c7f82b89e6069';\n\nfunction fetchTrendingMovies() {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(new Error('Something went wrong!!!'));\n    }\n  );\n}\n\nfunction fetchMoviesPage(id) {\n  return fetch(`${BASE_URL}/movie/${id}?api_key=${KEY}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    Promise.reject(new Error('Something went wrong!!!'));\n  });\n}\n\nfunction fetchActors(id) {\n  return fetch(`${BASE_URL}/movie/${id}/credits?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(new Error('Something went wrong!!!'));\n    }\n  );\n}\n\nfunction fetchReviews(id) {\n  return fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(new Error('Something went wrong!!!'));\n    }\n  );\n}\n\nfunction fetchSearch(query) {\n  return fetch(`${BASE_URL}/search/movie?query=${query}&api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(new Error('Something went wrong!!!'));\n    }\n  );\n}\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesPage,\n  fetchActors,\n  fetchReviews,\n  fetchSearch,\n};\n\nexport default api;\n"],"names":["Cast","useState","reviewsInfo","setReviewsInfo","movieId","useParams","useEffect","api","then","results","catch","error","length","map","review","id","author","content","BASE_URL","KEY","fetchTrendingMovies","fetch","response","ok","json","Promise","reject","Error","fetchMoviesPage","fetchActors","fetchReviews","fetchSearch","query"],"sourceRoot":""}