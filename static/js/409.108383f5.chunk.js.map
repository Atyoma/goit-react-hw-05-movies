{"version":3,"file":"static/js/409.108383f5.chunk.js","mappings":"wQAOe,SAASA,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,cAAY,SAAAC,GAC3B,IAAMC,EAAaD,EAAEE,cAAcC,SAASC,YAAYC,MACrC,KAAfJ,EAKJK,EAAAA,EAAAA,YACeL,GACZM,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPX,EAAUW,MAEXC,OAAM,SAAAC,GAAK,MAAI,WAThBC,EAAAA,GAAAA,QAAc,8BAUf,IAQH,OACE,4BACE,kBAAMC,SARW,SAAAZ,GACnBA,EAAEa,iBACFf,EAASE,GACTH,EAAU,KAKR,WACE,kBACEiB,KAAK,cACLC,UAAWC,EAAAA,EAAAA,YACXC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,sBAEd,oBAAQL,UAAWC,EAAAA,EAAAA,UAAnB,WACE,SAAC,MAAD,IADF,iBAIF,wBACGpB,GACCA,EAAOyB,KAAI,SAAAC,GAAU,IAAD,EAClB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,mBACGF,EAAMG,aADT,QACkBH,EAAMR,QAFjBQ,EAAME,c,kBClD7B,IAAME,EAAW,+BACXC,EAAM,mCAuDZ,IAAMrB,EAAM,CACVsB,oBAtDF,WACE,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,IAAOpB,MAC5D,SAAAuB,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,gCAiD7BC,gBA5CF,SAAyBZ,GACvB,OAAOK,MAAM,GAAD,OAAIH,EAAJ,kBAAsBF,EAAtB,oBAAoCG,IAAOpB,MAAK,SAAAuB,GAC1D,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,gCAwC3BE,YApCF,SAAqBb,GACnB,OAAOK,MAAM,GAAD,OAAIH,EAAJ,kBAAsBF,EAAtB,4BAA4CG,IAAOpB,MAC7D,SAAAuB,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,gCA+B7BG,aA1BF,SAAsBd,GACpB,OAAOK,MAAM,GAAD,OAAIH,EAAJ,kBAAsBF,EAAtB,4BAA4CG,IAAOpB,MAC7D,SAAAuB,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,gCAqB7BI,YAhBF,SAAqBC,GACnB,OAAOX,MAAM,GAAD,OAAIH,EAAJ,+BAAmCc,EAAnC,oBAAoDb,IAAOpB,MACrE,SAAAuB,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,iCAa/B,O,kBC/DA,KAAgB,KAAO,kBAAkB,KAAO,kBAAkB,YAAc,yBAAyB,UAAY,uBAAuB,IAAM,iBAAiB,OAAS,oBAAoB,SAAW,sBAAsB,OAAS,oBAAoB,KAAO,kBAAkB,KAAO,kBAAkB,OAAS,oBAAoB,KAAO,kBAAkB,QAAU","sources":["Pages/MoviesPage.js","Service/api-service.js","webpack://react-homework-template/./src/Pages/Nav.module.css?ba5d"],"sourcesContent":["import s from './Nav.module.css';\nimport { useState, useCallback } from 'react';\nimport api from '../Service/api-service';\nimport { Link } from 'react-router-dom';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState(null);\n\n  const getQuery = useCallback(e => {\n    const inputQuery = e.currentTarget.elements.searchInput.value;\n    if (inputQuery === '') {\n      toast.warning('Please enter search name'); //info    success   warning  error  default\n      return;\n    }\n\n    api\n      .fetchSearch(inputQuery)\n      .then(({ results }) => {\n        setMovies(results);\n      })\n      .catch(error => 'error');\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    getQuery(e);\n    setMovies('');\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"searchInput\"\n          className={s.inputSearch}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies...\"\n        />\n        <button className={s.btnSearch}>\n          <ImSearch /> search\n        </button>\n      </form>\n      <ul>\n        {movies &&\n          movies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`}>\n                  {movie.title ?? movie.name}\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'b392cdf9c5e216c7de5c7f82b89e6069';\n\nfunction fetchTrendingMovies() {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(new Error('Something went wrong!!!'));\n    }\n  );\n}\n\nfunction fetchMoviesPage(id) {\n  return fetch(`${BASE_URL}/movie/${id}?api_key=${KEY}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    Promise.reject(new Error('Something went wrong!!!'));\n  });\n}\n\nfunction fetchActors(id) {\n  return fetch(`${BASE_URL}/movie/${id}/credits?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(new Error('Something went wrong!!!'));\n    }\n  );\n}\n\nfunction fetchReviews(id) {\n  return fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(new Error('Something went wrong!!!'));\n    }\n  );\n}\n\nfunction fetchSearch(query) {\n  return fetch(`${BASE_URL}/search/movie?query=${query}&api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(new Error('Something went wrong!!!'));\n    }\n  );\n}\n// `${BASE_URL}/search/movie?query=${querry}&api_key=${API_KEY}`\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesPage,\n  fetchActors,\n  fetchReviews,\n  fetchSearch,\n};\n\nexport default api;\n\n// movie / { movie_id } / credits;\n\n// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Nav_list__+DVp0\",\"link\":\"Nav_link__Qzz21\",\"inputSearch\":\"Nav_inputSearch__z9WN-\",\"btnSearch\":\"Nav_btnSearch__1ujDI\",\"nav\":\"Nav_nav__Xv5Wd\",\"active\":\"Nav_active__FyzE-\",\"filmCard\":\"Nav_filmCard__++Itq\",\"poster\":\"Nav_poster__xEJ20\",\"info\":\"Nav_info__GCie2\",\"back\":\"Nav_back__l+GPX\",\"actors\":\"Nav_actors__R7Emz\",\"cast\":\"Nav_cast__IDBMq\",\"reviews\":\"Nav_reviews__m4VGo\"};"],"names":["MoviesPage","useState","movies","setMovies","getQuery","useCallback","e","inputQuery","currentTarget","elements","searchInput","value","api","then","results","catch","error","toast","onSubmit","preventDefault","name","className","s","type","autoComplete","autoFocus","placeholder","map","movie","to","id","title","BASE_URL","KEY","fetchTrendingMovies","fetch","response","ok","json","Promise","reject","Error","fetchMoviesPage","fetchActors","fetchReviews","fetchSearch","query"],"sourceRoot":""}