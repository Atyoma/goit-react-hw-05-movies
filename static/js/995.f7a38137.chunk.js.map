{"version":3,"file":"static/js/995.f7a38137.chunk.js","mappings":"2NACA,EAA8B,+BAA9B,EAAyE,6B,oCCwCzE,MApCA,YAAkC,IAAbA,EAAY,EAAZA,SACnB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAiBA,OACE,kBAAMH,SAZa,SAAAI,GACnBA,EAAMC,iBACqB,KAAvBH,EAAYI,QAKhBN,EAASE,GACTC,EAAe,KALbI,EAAAA,GAAAA,QAAc,6BAShB,WACE,kBACEC,UAAWC,EACXC,KAAK,OACLC,YAAY,yBACZC,aAAa,MACbC,WAAS,EACTC,MAAOZ,EACPa,SAxBoB,SAAAX,GACxBD,EAAeC,EAAMY,cAAcF,MAAMG,mBAyBvC,oBAAQP,KAAK,SAASF,UAAWC,EAAjC,WACE,SAAC,MAAD,IADF,iB,SCeN,MA5CA,WAAuB,IAAD,EACpB,GAAwCS,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCnB,EAAAA,EAAAA,UAAQ,UAC5CkB,EAAaE,IAAI,gBAD2B,QACf,IAD/B,eAAOC,EAAP,KAAoBC,EAApB,KAGA,GAA4BtB,EAAAA,EAAAA,UAAS,IAArC,eAAOuB,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAoBjB,OAZAC,EAAAA,EAAAA,YAAU,WACHN,GAGLO,EAAAA,EAAAA,YACeP,GACZQ,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPN,EAAUM,MAEXC,OAAM,SAAAC,GAAK,MAAI,aACjB,CAACX,KAGF,iCACE,SAAC,EAAD,CAAWtB,SApBU,SAAAsB,GACvBC,EAAeD,GACfF,EAAgB,CAAEc,MAAOZ,EAAYhB,SACrCmB,EAAU,OAkBPD,IACC,wBACGA,EAAOW,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMd,GAAxC,SACGU,EAAMK,SAFFL,EAAME,c,kBCrC3B,IAAMI,EAAW,+BACXC,EAAM,mCAuDZ,IAAMd,EAAM,CACVe,oBAtDF,WACE,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,IAAOb,MAC5D,SAAAgB,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,gCAiD7BC,gBA5CF,SAAyBd,GACvB,OAAOO,MAAM,GAAD,OAAIH,EAAJ,kBAAsBJ,EAAtB,oBAAoCK,IAAOb,MAAK,SAAAgB,GAC1D,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,gCAwC3BE,YApCF,SAAqBf,GACnB,OAAOO,MAAM,GAAD,OAAIH,EAAJ,kBAAsBJ,EAAtB,4BAA4CK,IAAOb,MAC7D,SAAAgB,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,gCA+B7BG,aA1BF,SAAsBhB,GACpB,OAAOO,MAAM,GAAD,OAAIH,EAAJ,kBAAsBJ,EAAtB,4BAA4CK,IAAOb,MAC7D,SAAAgB,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,gCAqB7BI,YAhBF,SAAqBrB,GACnB,OAAOW,MAAM,GAAD,OAAIH,EAAJ,+BAAmCR,EAAnC,oBAAoDS,IAAOb,MACrE,SAAAgB,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,iCAa/B","sources":["webpack://react-homework-template/./src/components/SearchBar/searchBar.module.css?272a","components/SearchBar/SearchBar.js","Pages/MoviesPage.js","Service/api-service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputSearch\":\"searchBar_inputSearch__i8Kz4\",\"btnSearch\":\"searchBar_btnSearch__fTuWH\"};","import { useState } from 'react';\nimport s from './searchBar.module.css';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nfunction Searchbar({ onSubmit }) {\n  const [filmRequest, setFilmRequest] = useState('');\n\n  const handleInputChange = event => {\n    setFilmRequest(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (filmRequest.trim() === '') {\n      toast.warning('Please enter search name');\n      return;\n    }\n\n    onSubmit(filmRequest);\n    setFilmRequest('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        className={s.inputSearch}\n        type=\"text\"\n        placeholder=\"Enter search movies...\"\n        autoComplete=\"off\"\n        autoFocus\n        value={filmRequest}\n        onChange={handleInputChange}\n      />\n      <button type=\"submit\" className={s.btnSearch}>\n        <ImSearch /> search\n      </button>\n    </form>\n  );\n}\n\nexport default Searchbar;\n","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport Searchbar from '../components/SearchBar/SearchBar';\nimport api from '../Service/api-service';\n\nfunction MoviesPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(\n    searchParams.get('query') ?? ''\n  );\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  const handleFormSubmit = searchQuery => {\n    setSearchQuery(searchQuery);\n    setSearchParams({ query: searchQuery.trim() });\n    setMovies([]);\n  };\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    api\n      .fetchSearch(searchQuery)\n      .then(({ results }) => {\n        setMovies(results);\n      })\n      .catch(error => 'error');\n  }, [searchQuery]);\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit} />\n      {movies && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default MoviesPage;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'b392cdf9c5e216c7de5c7f82b89e6069';\n\nfunction fetchTrendingMovies() {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(new Error('Something went wrong!!!'));\n    }\n  );\n}\n\nfunction fetchMoviesPage(id) {\n  return fetch(`${BASE_URL}/movie/${id}?api_key=${KEY}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    Promise.reject(new Error('Something went wrong!!!'));\n  });\n}\n\nfunction fetchActors(id) {\n  return fetch(`${BASE_URL}/movie/${id}/credits?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(new Error('Something went wrong!!!'));\n    }\n  );\n}\n\nfunction fetchReviews(id) {\n  return fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(new Error('Something went wrong!!!'));\n    }\n  );\n}\n\nfunction fetchSearch(query) {\n  return fetch(`${BASE_URL}/search/movie?query=${query}&api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(new Error('Something went wrong!!!'));\n    }\n  );\n}\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesPage,\n  fetchActors,\n  fetchReviews,\n  fetchSearch,\n};\n\nexport default api;\n"],"names":["onSubmit","useState","filmRequest","setFilmRequest","event","preventDefault","trim","toast","className","s","type","placeholder","autoComplete","autoFocus","value","onChange","currentTarget","toLowerCase","useSearchParams","searchParams","setSearchParams","get","searchQuery","setSearchQuery","movies","setMovies","location","useLocation","useEffect","api","then","results","catch","error","query","map","movie","to","id","state","from","title","BASE_URL","KEY","fetchTrendingMovies","fetch","response","ok","json","Promise","reject","Error","fetchMoviesPage","fetchActors","fetchReviews","fetchSearch"],"sourceRoot":""}