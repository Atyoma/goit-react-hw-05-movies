{"version":3,"file":"static/js/973.185b3859.chunk.js","mappings":"gMACA,EAA4B,wBAA5B,EAAgE,wB,6CCKjD,SAASA,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,YACeH,GACZI,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPN,EAAcM,MAEfC,OAAM,SAAAC,GAAK,MAAI,aACjB,CAACP,KAGF,gBAAKQ,UAAWC,EAAhB,UACE,wBACGX,GACCA,EAAWY,KAAI,SAAAC,GAAK,OAClB,0BAC0B,OAAvBA,EAAMC,cACL,gBACEC,IAAG,0CAAqCF,EAAMC,cAC9CE,IAAG,eAAUH,EAAMI,MACnBP,UAAWC,KAGb,gBACEI,IAAKG,EACLF,IAAI,gCACJN,UAAWC,KAGf,uBAAIE,EAAMI,QACV,uCAAeJ,EAAMM,eAfdN,EAAMO,a,kBCxB3B,IAAMC,EAAW,+BACXC,EAAM,mCAuDZ,IAAMjB,EAAM,CACVkB,oBAtDF,WACE,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,IAAOhB,MAC5D,SAAAmB,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,gCAiD7BC,gBA5CF,SAAyBX,GACvB,OAAOI,MAAM,GAAD,OAAIH,EAAJ,kBAAsBD,EAAtB,oBAAoCE,IAAOhB,MAAK,SAAAmB,GAC1D,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,gCAwC3BE,YApCF,SAAqBZ,GACnB,OAAOI,MAAM,GAAD,OAAIH,EAAJ,kBAAsBD,EAAtB,4BAA4CE,IAAOhB,MAC7D,SAAAmB,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,gCA+B7BG,aA1BF,SAAsBb,GACpB,OAAOI,MAAM,GAAD,OAAIH,EAAJ,kBAAsBD,EAAtB,4BAA4CE,IAAOhB,MAC7D,SAAAmB,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,gCAqB7BI,YAhBF,SAAqBC,GACnB,OAAOX,MAAM,GAAD,OAAIH,EAAJ,+BAAmCc,EAAnC,oBAAoDb,IAAOhB,MACrE,SAAAmB,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElBC,QAAQC,OAAO,IAAIC,MAAM,iCAa/B,O","sources":["webpack://react-homework-template/./src/Pages/Cast/Cast.module.css?a50f","Pages/Cast/Cast.js","Service/api-service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actorCard\":\"Cast_actorCard__HMKtl\",\"actorIcon\":\"Cast_actorIcon__SPkYo\"};","import s from './Cast.module.css';\nimport { useParams } from 'react-router-dom';\nimport api from 'Service/api-service';\nimport { useState, useEffect } from 'react';\nimport avatarDefault from '../../Images/avatardefault_92824.png';\n\nexport default function Cast() {\n  const [actorsInfo, setActorsInfo] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    api\n      .fetchActors(movieId)\n      .then(({ cast }) => {\n        setActorsInfo(cast);\n      })\n      .catch(error => 'error');\n  }, [movieId]);\n\n  return (\n    <div className={s.actorCard}>\n      <ul>\n        {actorsInfo &&\n          actorsInfo.map(actor => (\n            <li key={actor.id}>\n              {actor.profile_path !== null ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w300/${actor.profile_path}`}\n                  alt={`Foto ${actor.name}`}\n                  className={s.actorIcon}\n                />\n              ) : (\n                <img\n                  src={avatarDefault}\n                  alt=\"There is no icon of the actor\"\n                  className={s.actorIcon}\n                />\n              )}\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'b392cdf9c5e216c7de5c7f82b89e6069';\n\nfunction fetchTrendingMovies() {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(new Error('Something went wrong!!!'));\n    }\n  );\n}\n\nfunction fetchMoviesPage(id) {\n  return fetch(`${BASE_URL}/movie/${id}?api_key=${KEY}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    Promise.reject(new Error('Something went wrong!!!'));\n  });\n}\n\nfunction fetchActors(id) {\n  return fetch(`${BASE_URL}/movie/${id}/credits?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(new Error('Something went wrong!!!'));\n    }\n  );\n}\n\nfunction fetchReviews(id) {\n  return fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(new Error('Something went wrong!!!'));\n    }\n  );\n}\n\nfunction fetchSearch(query) {\n  return fetch(`${BASE_URL}/search/movie?query=${query}&api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      Promise.reject(new Error('Something went wrong!!!'));\n    }\n  );\n}\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesPage,\n  fetchActors,\n  fetchReviews,\n  fetchSearch,\n};\n\nexport default api;\n"],"names":["Cast","useState","actorsInfo","setActorsInfo","movieId","useParams","useEffect","api","then","cast","catch","error","className","s","map","actor","profile_path","src","alt","name","avatarDefault","character","id","BASE_URL","KEY","fetchTrendingMovies","fetch","response","ok","json","Promise","reject","Error","fetchMoviesPage","fetchActors","fetchReviews","fetchSearch","query"],"sourceRoot":""}